[{"/Users/thaissantiago/netflixclone/src/index.js":"1","/Users/thaissantiago/netflixclone/src/reportWebVitals.js":"2","/Users/thaissantiago/netflixclone/src/App.js":"3","/Users/thaissantiago/netflixclone/src/Tmdb.js":"4","/Users/thaissantiago/netflixclone/src/components/MovieRow.js":"5","/Users/thaissantiago/netflixclone/src/components/featuredMovie.js":"6","/Users/thaissantiago/netflixclone/src/components/FeaturedMovie.js":"7","/Users/thaissantiago/netflixclone/src/components/Header.js":"8"},{"size":246,"mtime":1637176444449,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1637175600079,"results":"11","hashOfConfig":"10"},{"size":2217,"mtime":1638366876537,"results":"12","hashOfConfig":"10"},{"size":2767,"mtime":1637626286540,"results":"13","hashOfConfig":"10"},{"size":1813,"mtime":1638366309291,"results":"14","hashOfConfig":"10"},{"size":160,"mtime":1637264298010,"results":"15","hashOfConfig":"10"},{"size":1513,"mtime":1637777930907,"results":"16","hashOfConfig":"10"},{"size":578,"mtime":1637863298220,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"wnxeo4",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"21"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"21"},"/Users/thaissantiago/netflixclone/src/index.js",["40"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["41","42"],"/Users/thaissantiago/netflixclone/src/reportWebVitals.js",[],"/Users/thaissantiago/netflixclone/src/App.js",["43","44"],"/Users/thaissantiago/netflixclone/src/Tmdb.js",["45"],"const API_KEY = '98d97bdfc0863b5b287100817bdc7e75';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\n/*\n- originais da netflix\n- recomendados (trending)\n- em alta (top rated)\n- acao\n- comedia\n- terror\n- romance\n- documentarios\n*/\n\nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${API_BASE}${endpoint}`); // esta fazendo uma requisicao para um servico externo. Quando ele recebe essa resposta, vai para a segunda linha\n    const json = await req.json(); // ele roda esse comando e espera a resposta (o await significa que ele deve esperar essa resposta e entao ir para o proximo comando)\n    return json;\n}\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title: 'Netflix Originals',\n                items: await basicFetch(`/discover/tv?with_network=213&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title: 'Trending Now',\n                items: await basicFetch(`/trending/all/week?&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'toprated',\n                title: 'Popular on Netflix',\n                items: await basicFetch(`/movie/top_rated?&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title: 'Acion',\n                items: await basicFetch(`/discover/movie?with_genres=28&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title: 'Comedies',\n                items: await basicFetch(`/discover/movie?with_genres=35&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title: 'Horror Movies',\n                items: await basicFetch(`/discover/movie?with_genres=27&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title: 'Romance',\n                items: await basicFetch(`/discover/movie?with_genres=10749&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'documentary',\n                title: 'Documentaries',\n                items: await basicFetch(`/discover/movie?with_genres=99&api_key=${API_KEY}`)\n            }\n        ]\n    },\n    getMovieInfo: async (movieId, type) => {\n        let info = {};\n\n        if(movieId) {\n            switch(type) {\n                case 'movie':\n                    info = await basicFetch(`/movie/${movieId}?api_key=${API_KEY}`);\n                break;\n                case 'tv':\n                    info = await basicFetch(`/tv/${movieId}?api_key=${API_KEY}`);\n                break;\n                default:\n                    info = null;\n                break;\n            }\n        }\n\n        return info;\n    }\n\n}","/Users/thaissantiago/netflixclone/src/components/MovieRow.js",["46"],"import React, { useState } from \"react\";\nimport \"./MovieRow.css\";\nimport NavigateBeforeIcon from \"@mui/icons-material/NavigateBefore\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\n\nexport default ({ title, items }) => {\n  const [scrollX, setScrollX] = useState(-400);\n\n  const handleLeftArrow = () => {\n    let x = scrollX + Math.round(window.innerWidth / 2);\n    if (x > 0) {\n      x = 0;\n    }\n    setScrollX(x);\n  };\n\n  const handleRightArrow = () => {\n    let x = scrollX - Math.round(window.innerWidth / 2);\n    let listW = items.results.length * 150;\n    if((window.innerWidth - listW) > x) {\n      x = (window.innerWidth - listW) - 60;\n    }\n    setScrollX(x);\n  };\n\n  return (\n    <div className=\"movieRow\">\n      <h2>{title}</h2>\n      <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n        <NavigateBeforeIcon style={{ fontSize: 50 }} />\n      </div>\n      <div className=\"movieRow--right\" onClick={handleRightArrow}>\n        <NavigateNextIcon style={{ fontSize: 50 }} />\n      </div>\n      <div className=\"movieRow--listarea\">\n        <div\n          className=\"movieRow--list\"\n          style={{\n            marginLeft: scrollX,\n            width: items.results.length * 150,\n          }}\n        >\n          {items.results.length > 0 &&\n            items.results.map((item, key) => {\n              if (item.poster_path === null) {\n                return <React.Fragment key={key}></React.Fragment>;\n              }\n              return (\n                <div key={key} className=\"movieRow--item\">\n                  <img\n                    src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\n                    alt={item.original_title}\n                  />\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/thaissantiago/netflixclone/src/components/featuredMovie.js",["47"],"/Users/thaissantiago/netflixclone/src/components/FeaturedMovie.js",["48"],"import React from \"react\";\nimport \"./FeaturedMovie.css\";\n\nexport default ({ item }) => {\n    console.log(item);\n\n    let firstDate = new Date(item.first_air_date);\n    let genres = [];\n    for(let i in item.genres) {\n        genres.push( item.genres[i].name);\n    }\n\n  return (\n    <section\n      className=\"featured\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`,\n      }}\n    >\n      <div className=\"featured--vertical\">\n        <div className=\"featured--horizontal\">\n            <div className=\"featured--name\">{item.original_name}</div>\n            <div className=\"featured--info\">\n                <div className=\"featured--points\">{item.vote_average} points</div>\n                <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n                <div className=\"featured--seasons\">{item.number_of_seasons} season{item.number_of_seasons !== 1 ? 's' : ''}</div>\n            </div>   \n            <div className=\"featured--description\">{item.overview}</div>\n            <div className=\"featured--buttons\">\n                <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">▶︎ Watch</a>\n                <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ My list</a>\n            </div>\n            <div className=\"featured--genres\"><strong>Genres:</strong> {genres.join(', ')}</div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","/Users/thaissantiago/netflixclone/src/components/Header.js",["49"],"import React from \"react\";\nimport './Header.css';\n\nexport default ({black}) => {\n    return (\n        <header className={black ? 'black' : ''}>\n            <div className=\"header--logo\">\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/7/7a/Logonetflix.png\" alt=\"Netflix\" />\n            </div>\n            <div className=\"header--user\">\n                <a href=\"/\">\n                    <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"User\" />\n                </a>\n            </div>\n        </header>\n    )\n}",{"ruleId":"50","severity":1,"message":"51","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":23},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":8,"column":1,"nodeType":"60","endLine":76,"endColumn":2},{"ruleId":"61","severity":1,"message":"62","line":71,"column":9,"nodeType":"63","endLine":71,"endColumn":91},{"ruleId":"58","severity":1,"message":"64","line":21,"column":1,"nodeType":"60","endLine":86,"endColumn":2},{"ruleId":"58","severity":1,"message":"59","line":6,"column":1,"nodeType":"60","endLine":61,"endColumn":3},{"ruleId":"58","severity":1,"message":"59","line":4,"column":1,"nodeType":"60","endLine":10,"endColumn":2},{"ruleId":"58","severity":1,"message":"59","line":4,"column":1,"nodeType":"60","endLine":40,"endColumn":3},{"ruleId":"58","severity":1,"message":"59","line":4,"column":1,"nodeType":"60","endLine":17,"endColumn":2},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]