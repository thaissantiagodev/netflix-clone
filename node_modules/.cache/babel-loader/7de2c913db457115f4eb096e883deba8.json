{"ast":null,"code":"const API_KEY = '98d97bdfc0863b5b287100817bdc7e75';\nconst API_BASE = 'https://api.themoviedb.org/3';\n/*\n- originais da netflix\n- recomendados (trending)\n- em alta (top rated)\n- acao\n- comedia\n- terror\n- romance\n- documentarios\n*/\n\nconst basicFetch = async endpoint => {\n  const req = await fetch(`${API_BASE}${endpoint}`); // esta fazendo uma requisicao para um servico externo. Quando ele recebe essa resposta, vai para a segunda linha\n\n  const json = await req.json(); // ele roda esse comando e espera a resposta (o await significa que ele deve esperar essa resposta e entao ir para o proximo comando)\n\n  return json;\n};\n\nexport default {\n  getHomeList: async () => {\n    return [{\n      slug: 'originals',\n      title: 'Netflix Originals',\n      items: await basicFetch(`/discover/tv?with_network=213&api_key=${API_KEY}`)\n    }, {\n      slug: 'trending',\n      title: 'Trending Now',\n      items: await basicFetch(`/trending/all/week?&api_key=${API_KEY}`)\n    }, {\n      slug: 'toprated',\n      title: 'Popular on Netflix',\n      items: await basicFetch(`/movie/top_rated?&api_key=${API_KEY}`)\n    }, {\n      slug: 'action',\n      title: 'Acion',\n      items: await basicFetch(`/discover/movie?with_genres=28&api_key=${API_KEY}`)\n    }, {\n      slug: 'comedy',\n      title: 'Comedies',\n      items: await basicFetch(`/discover/movie?with_genres=35&api_key=${API_KEY}`)\n    }, {\n      slug: 'horror',\n      title: 'Horror Movies',\n      items: await basicFetch(`/discover/movie?with_genres=27&api_key=${API_KEY}`)\n    }, {\n      slug: 'romance',\n      title: 'Romance',\n      items: await basicFetch(`/discover/movie?with_genres=10749&api_key=${API_KEY}`)\n    }, {\n      slug: 'documentary',\n      title: 'Documentaries',\n      items: await basicFetch(`/discover/movie?with_genres=99&api_key=${API_KEY}`)\n    }];\n  },\n  getMovieInfo: async (movieId, type) => {\n    let info = {};\n\n    if (movieId) {\n      switch (type) {\n        case 'movie':\n          info = await basicFetch(`/movie/${movieId}&api_key=${API_KEY}`);\n          break;\n\n        case 'tv':\n          info = await basicFetch(`/tv/${movieId}&api_key=${API_KEY}`);\n          break;\n\n        default:\n          info = null;\n          break;\n      }\n    }\n\n    return info;\n  }\n};","map":{"version":3,"sources":["/Users/thaissantiago/netflixclone/src/Tmdb.js"],"names":["API_KEY","API_BASE","basicFetch","endpoint","req","fetch","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info"],"mappings":"AAAA,MAAMA,OAAO,GAAG,kCAAhB;AACA,MAAMC,QAAQ,GAAG,8BAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,MAAOC,QAAP,IAAoB;AACnC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,GAAEE,QAAS,EAAxB,CAAvB,CADmC,CACgB;;AACnD,QAAMG,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB,CAFmC,CAEJ;;AAC/B,SAAOA,IAAP;AACH,CAJD;;AAMA,eAAe;AACXC,EAAAA,WAAW,EAAE,YAAY;AACrB,WAAO,CACH;AACIC,MAAAA,IAAI,EAAE,WADV;AAEIC,MAAAA,KAAK,EAAE,mBAFX;AAGIC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,yCAAwCF,OAAQ,EAAlD;AAH3B,KADG,EAMH;AACIQ,MAAAA,IAAI,EAAE,UADV;AAEIC,MAAAA,KAAK,EAAE,cAFX;AAGIC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,+BAA8BF,OAAQ,EAAxC;AAH3B,KANG,EAWH;AACIQ,MAAAA,IAAI,EAAE,UADV;AAEIC,MAAAA,KAAK,EAAE,oBAFX;AAGIC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,6BAA4BF,OAAQ,EAAtC;AAH3B,KAXG,EAgBH;AACIQ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,KAAK,EAAE,OAFX;AAGIC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,0CAAyCF,OAAQ,EAAnD;AAH3B,KAhBG,EAqBH;AACIQ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,KAAK,EAAE,UAFX;AAGIC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,0CAAyCF,OAAQ,EAAnD;AAH3B,KArBG,EA0BH;AACIQ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,KAAK,EAAE,eAFX;AAGIC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,0CAAyCF,OAAQ,EAAnD;AAH3B,KA1BG,EA+BH;AACIQ,MAAAA,IAAI,EAAE,SADV;AAEIC,MAAAA,KAAK,EAAE,SAFX;AAGIC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,6CAA4CF,OAAQ,EAAtD;AAH3B,KA/BG,EAoCH;AACIQ,MAAAA,IAAI,EAAE,aADV;AAEIC,MAAAA,KAAK,EAAE,eAFX;AAGIC,MAAAA,KAAK,EAAE,MAAMR,UAAU,CAAE,0CAAyCF,OAAQ,EAAnD;AAH3B,KApCG,CAAP;AA0CH,GA5CU;AA6CXW,EAAAA,YAAY,EAAE,OAAOC,OAAP,EAAgBC,IAAhB,KAAyB;AACnC,QAAIC,IAAI,GAAG,EAAX;;AAEA,QAAGF,OAAH,EAAY;AACR,cAAOC,IAAP;AACI,aAAK,OAAL;AACIC,UAAAA,IAAI,GAAG,MAAMZ,UAAU,CAAE,UAASU,OAAQ,YAAWZ,OAAQ,EAAtC,CAAvB;AACJ;;AACA,aAAK,IAAL;AACIc,UAAAA,IAAI,GAAG,MAAMZ,UAAU,CAAE,OAAMU,OAAQ,YAAWZ,OAAQ,EAAnC,CAAvB;AACJ;;AACA;AACIc,UAAAA,IAAI,GAAG,IAAP;AACJ;AATJ;AAWH;;AAED,WAAOA,IAAP;AACH;AA/DU,CAAf","sourcesContent":["const API_KEY = '98d97bdfc0863b5b287100817bdc7e75';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\n/*\n- originais da netflix\n- recomendados (trending)\n- em alta (top rated)\n- acao\n- comedia\n- terror\n- romance\n- documentarios\n*/\n\nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${API_BASE}${endpoint}`); // esta fazendo uma requisicao para um servico externo. Quando ele recebe essa resposta, vai para a segunda linha\n    const json = await req.json(); // ele roda esse comando e espera a resposta (o await significa que ele deve esperar essa resposta e entao ir para o proximo comando)\n    return json;\n}\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title: 'Netflix Originals',\n                items: await basicFetch(`/discover/tv?with_network=213&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title: 'Trending Now',\n                items: await basicFetch(`/trending/all/week?&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'toprated',\n                title: 'Popular on Netflix',\n                items: await basicFetch(`/movie/top_rated?&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title: 'Acion',\n                items: await basicFetch(`/discover/movie?with_genres=28&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title: 'Comedies',\n                items: await basicFetch(`/discover/movie?with_genres=35&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title: 'Horror Movies',\n                items: await basicFetch(`/discover/movie?with_genres=27&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title: 'Romance',\n                items: await basicFetch(`/discover/movie?with_genres=10749&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'documentary',\n                title: 'Documentaries',\n                items: await basicFetch(`/discover/movie?with_genres=99&api_key=${API_KEY}`)\n            }\n        ]\n    },\n    getMovieInfo: async (movieId, type) => {\n        let info = {};\n\n        if(movieId) {\n            switch(type) {\n                case 'movie':\n                    info = await basicFetch(`/movie/${movieId}&api_key=${API_KEY}`);\n                break;\n                case 'tv':\n                    info = await basicFetch(`/tv/${movieId}&api_key=${API_KEY}`);\n                break;\n                default:\n                    info = null;\n                break;\n            }\n        }\n\n        return info;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}